package com.dfm.boot.example;

import javax.imageio.ImageIO;
import javax.imageio.ImageWriteParam;
import javax.imageio.ImageWriter;
import javax.imageio.stream.ImageOutputStream;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Base64;
import java.util.zip.GZIPInputStream;
import java.util.zip.GZIPOutputStream;

/**
 * @author daifengming
 */
public class Base64Test {


    public static void main(String[] args) {
        try {
            // 读取图片并转换为 Base64 字符串
            String base64Image =
                    "";
//            encodeFileToBase64("/Users/daifengming/Desktop/sanxia.png");
            //console size

            System.out.println("base64Image size: " + base64Image.length());
//            System.out.println("Base64: " + base64Image);

            String compressedBase64frombase64 = compressBase64Image(base64Image);
//            System.out.println("compressedBase64frombase64 Base64: " + compressedBase64frombase64);
            System.out.println("compressedBase64frombase64 size: " + compressedBase64frombase64.length());

            // 压缩 Base64 字符串
            String compressedBase64 = compressBase64(compressedBase64frombase64);
            //console size
            System.out.println("compressedBase64 size: " + compressedBase64.length());
//    System.out.println("Compressed Base64: " + compressedBase64);,

            // 解压缩 Base64 字符串
            String decompressedBase64 = decompressBase64(compressedBase64);
            System.out.println("Decompressed Base64: " + decompressedBase64);

            // 解码并保存为图片
            decodeBase64ToFile(decompressedBase64, "/Users/daifengming/Desktop/sanxia-3.png");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static String compressBase64Image(String base64Input) throws IOException {
        // 解码原始 Base64 字符串
        byte[] decodedBytes = Base64.getDecoder().decode(base64Input);

        // 将字节数组转换为 BufferedImage
        ByteArrayInputStream bais = new ByteArrayInputStream(decodedBytes);
        BufferedImage image = ImageIO.read(bais);

        // 创建输出流
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ImageWriter writer = ImageIO.getImageWritersByFormatName("jpg").next();
        ImageOutputStream ios = ImageIO.createImageOutputStream(baos);
        writer.setOutput(ios);

        ImageWriteParam param = writer.getDefaultWriteParam();
        param.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
        param.setCompressionQuality(0.7f); // 设置压缩质量为 70%

        // 写入压缩后的图像
        writer.write(null, new javax.imageio.IIOImage(image, null, null), param);
        writer.dispose();

        // 返回压缩后的 Base64 字符串
        return Base64.getEncoder().encodeToString(baos.toByteArray());
    }

    public static String encodeFileToBase64(String filePath) throws IOException {
        BufferedImage image = ImageIO.read(new File(filePath));
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        // Adjust compression level if needed
        ImageWriter writer = ImageIO.getImageWritersByFormatName("jpg").next();
        ImageOutputStream ios = ImageIO.createImageOutputStream(baos);
        writer.setOutput(ios);

        ImageWriteParam param = writer.getDefaultWriteParam();
        param.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
        param.setCompressionQuality(0.7f); // Set quality to 70%

        writer.write(null, new javax.imageio.IIOImage(image, null, null), param);
        writer.dispose();

        return Base64.getEncoder().encodeToString(baos.toByteArray());
    }

    public static String compressBase64(String base64Input) throws IOException {
        byte[] decodedBytes = Base64.getDecoder().decode(base64Input);
        byte[] compressedBytes = compress(decodedBytes);
        return Base64.getEncoder().encodeToString(compressedBytes);
    }

    public static String decompressBase64(String compressedBase64) throws IOException {
        byte[] compressedBytes = Base64.getDecoder().decode(compressedBase64);
        byte[] decompressedBytes = decompress(compressedBytes);
        return Base64.getEncoder().encodeToString(decompressedBytes);
    }

    private static byte[] compress(byte[] data) throws IOException {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        try (GZIPOutputStream gzipOutputStream = new GZIPOutputStream(byteArrayOutputStream)) {
            gzipOutputStream.write(data);
        }
        return byteArrayOutputStream.toByteArray();
    }

    private static byte[] decompress(byte[] compressedData) throws IOException {
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(compressedData);
        try (GZIPInputStream gzipInputStream = new GZIPInputStream(byteArrayInputStream);
             ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {
            byte[] buffer = new byte[1024];
            int len;
            while ((len = gzipInputStream.read(buffer)) != -1) {
                byteArrayOutputStream.write(buffer, 0, len);
            }
            return byteArrayOutputStream.toByteArray();
        }
    }

    public static void decodeBase64ToFile(String base64Image, String filePath) throws IOException {
        byte[] imageBytes = Base64.getDecoder().decode(base64Image);
        Files.write(Paths.get(filePath), imageBytes);
    }
}
